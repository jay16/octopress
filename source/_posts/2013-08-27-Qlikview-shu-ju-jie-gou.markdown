---
layout: post
title: Qlikview 数据结构
date: 2013-08-27 06:01:45
comments: true
categories: report
---
## 数据加载语句

数据由load 或select 语句加载。每一语句都将生成一个内部表格。表格总是可以被视为某种列表，然后每一记录( 行) 可视为对象类型的新实例，而每一字段( 列) 可视为某种特定属性或对象的属性。

### 规则

加载数据到QlikView 时适用以下规则：

1. 在QlikView 中，load 或select 语句生成的表格之间无任何区别。因此，在加载多个表格时，这些表格是由load 还是select 语句加载，抑或由这两者共同加载都无关紧要。
2. 语句或数据库中原始表格的字段顺序是由QlikView 逻辑随机排列。
3. 文件名将在后续流程中用以识别字段和进行关联。文件名需要区分大小写，这在脚本中重新命名字段时经常是必需的。

## 逻辑表格

每个load 或select 语句均可生成一个表格。QlikView 通常将生成的每个表格结果视为一个逻辑表格。但是，本规则存在两个例外：

1. **如果两个或多个语句生成带有相同字段名的表格，各表格会被串联并被视为一个逻辑表格。**

2. 如果load 或select 语句位于以下任何限定符之后，数据会被更改或得到不同的处理：

关键字 | 特殊处理 |
-------|----------|
concatenate | 此表格会串联( 添加) 至另一个命名表格或最后创建的逻辑表格。
crosstable | 此表格会从交叉表格式转换为列格式。
generic|  此表格会被分成几个其他的逻辑表格。
info | 此表格不会被加载为逻辑表格，但会被加载为包含文件、声音和
URL | 等外部信息链接的信息表格。
IntervalMatch | 此表格( 必须包含两列) 被解释为数值间隔，该间隔与指定字段中的离散数字关联。
join QlikView | 会根据共同的字段联接此表格与另一个命名表格或最后创建的逻辑表格。保存此表格会缩减到只包含与另一个命名表格或最后创建的逻辑表格共有的字段。
mapping | 此表格( 必须包含两列) 会被读取为映像表，且从不与其他表格关联。
semantic | 此表格不会加载为逻辑表格，但会作为包含不应联接的关系的语义表格而加载，例如其他相同类型对象的前任、继任及其他参考。

一旦数据完成加载，逻辑表格即会关联。逻辑表格和关联可见于表格查看器对话框。

## 字段名称

有时需要重新命名字段以便获取所需关联。

**例1：**

两个字段的命名不同，尽管表示的意思相同：

1. 字段ID 在Customers 表格中
2. 字段CustomerID 在Orders 表格中

**两个字段都表示特定客户的识别码，因此两个字段的命名应相同，如均为CustomerID。**

**例2：**

两个字段的命名相同，但实际上表示的意思不同：

1. 字段Date 在Invoices 表格中
2. 字段Date 在Orders 表格中

**两个字段最好应分别重新命名为InvoiceDate 和OrderDate。**

**例3：**

在数据库中有可能出现拼写错误或有关大小写字母的不同惯例。由于**QlikView 要区分大小写字母**，因此确保正确拼写至关重要。

##重新命名字段

字段可以在脚本中重新命名，因此不需要更改原始数据。重新命名字段具体有两种方法：

### 使用Alias 语句

Load 或Select语句可以置于alias( 别名) 语句之后。

    //示例：
    Alias ID as CustomerID;
    Load \* from Customer.csv;

#### 使用As 说明符

Load (第246 页) 或Select (SQL) (第262 页) 语句可以包含as 说明符。

    //示例：
    Load ID as CustomerID, Name, Address, Zip, City, State from Customer.csv;
